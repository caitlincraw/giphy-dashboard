{"version":3,"sources":["Gif.js","Nav.js","api/giphy.js","GifSearchForm.js","index.js"],"names":["Gif","className","style","width","src","this","props","url","alt","title","data-clipboard-text","onClick","alert","React","Component","Nav","handleClick","axios","create","baseURL","params","api_key","GifSearchForm","state","term","rating","searchLimit","handleSubmit","e","preventDefault","giphy","get","encodeURIComponent","then","response","onSubmit","handleChange","setState","target","name","value","htmlFor","type","id","onChange","App","gifs","data","isReady","searchItems","Array","isArray","length","newSearchLimit","parseInt","givenTerm","givenRating","bind","console","log","map","gif","images","original","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5849c29c.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Clipboard from 'react-clipboard.js';\n\nclass Gif extends React.Component {\n    render() {\n        return (\n            <div className=\"card\" style={{width: \"20rem\"}}>\n                <img src={this.props.url} className=\"card-img-top\" alt=\"Dog pic\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{this.props.title}</h5>\n                    <Clipboard className=\"copy-button\" data-clipboard-text={this.props.url} onClick={() => alert(\"Gif has been copied\")}>\n                        COPY GIF URL\n                    </Clipboard>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Gif;","import React from 'react';\nimport './index.css';\n\nclass Nav extends React.Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-light justify-content-between\">\n                <button className=\"navbar-brand\" onClick={this.props.handleClick}>Giphy Dashboard</button>\n            </nav>\n        )\n    }\n}\n\nexport default Nav;","import axios from 'axios';\n\nconst API_KEY = \"suCTvQWQwFR0MH7hyapNQzpR7MS7Ur4T\";\n\nexport default axios.create({\n    baseURL: \"https://api.giphy.com/v1/\",\n    params: {api_key: API_KEY}  \n})","import React from 'react';\nimport './index.css';\nimport giphy from './api/giphy';\n\nclass GifSearchForm extends React.Component {\n    state = {\n        term: \"\",\n        rating: \"all\",\n        searchLimit: 5\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.state.term = (this.state.term === \"\") ? `You didn't enter a keyword` : this.state.term;\n\n        if (this.state.rating === \"all\") {\n            giphy.get(`/gifs/search?q=${encodeURIComponent(this.state.term)}&limit=${this.state.searchLimit}`)\n            .then(response => {\n                this.props.onSubmit(this.state.term, this.state.rating, this.state.searchLimit, response)\n            })\n        } else {\n            giphy.get(`/gifs/search?q=${encodeURIComponent(this.state.term)}&rating=${this.state.rating}&limit=${this.state.searchLimit}`)\n            .then(response => {\n            this.props.onSubmit(this.state.term, this.state.rating, this.state.searchLimit, response)\n            })\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <label htmlFor=\"term\">Search by Keyword</label>\n                <input type=\"text\" id=\"term\" name=\"term\" onChange={this.handleChange} />\n                <label htmlFor=\"rating\">Select a Rating</label>\n                <select id=\"rating\" name=\"rating\" onChange={this.handleChange}>\n                    <option value=\"all\">Any Rating</option>\n                    <option value=\"g\">G</option>\n                    <option value=\"pg\">PG</option>\n                    <option value=\"pg-13\">PG-13</option>\n                    <option value=\"r\">R</option>\n                </select>\n                <div className=\"form-check form-check-inline\">\n                    <label> Pick the Response Limit:\n                        <input className=\"form-check-input\" type=\"radio\" name=\"searchLimit\" id=\"5\" value=\"5\" onChange={this.handleChange}/>\n                        <label htmlFor=\"5\" className=\"form-check-label\">5</label>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"searchLimit\" id=\"10\" value=\"10\" onChange={this.handleChange}/>\n                        <label htmlFor=\"10\" className=\"form-check-label\">10</label>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"searchLimit\" id=\"15\" value=\"15\" onChange={this.handleChange}/>\n                        <label htmlFor=\"15\" className=\"form-check-label\">15</label>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"searchLimit\" id=\"20\" value=\"20\" onChange={this.handleChange}/>\n                        <label htmlFor=\"20\" className=\"form-check-label\">20</label>\n                    </label>\n                </div>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        )\n    }\n}\n\nexport default GifSearchForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Gif from './Gif.js';\nimport Nav from './Nav.js';\nimport giphy from './api/giphy';\nimport GifSearchForm from './GifSearchForm';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {gifs: [],\n                  isReady: false, \n                  title: \"\",\n                  searchItems: []}\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleSubmit = (term, rating, searchLimit, response) => {\n      this.setState({\n        gifs: response.data.data,\n        isReady: true,\n        title: `${searchLimit} ${term} Gifs`,\n        searchItems: [{term: term, rating: rating, searchLimit: searchLimit}]\n      })\n  }\n\n  handleClick = () => {\n    if ((Array.isArray(this.state.searchItems) && this.state.searchItems.length)) {\n      let newSearchLimit = parseInt(this.state.searchItems[0].searchLimit)+5;\n      let givenTerm = this.state.searchItems[0].term;\n      let givenRating = this.state.searchItems[0].rating;\n      if (givenRating === \"all\") {\n        giphy.get(`/gifs/search?q=${encodeURIComponent(givenTerm)}&limit=${newSearchLimit}`)\n        .then(response => {\n            this.handleSubmit(givenTerm, givenRating, newSearchLimit, response)\n        })\n      } else {\n        giphy.get(`/gifs/search?q=${encodeURIComponent(givenTerm)}&rating=${givenRating}&limit=${newSearchLimit}`)\n        .then(response => {\n          this.handleSubmit(givenTerm, givenRating, newSearchLimit, response)\n        })\n      }\n    } else {\n      alert(\"Please search for a specific keyword to see more gifs\")\n    }\n  }\n\n  componentDidMount(){\n    giphy.get(\"/gifs/trending?limit=10\")\n    .then(response => {\n      console.log(response);\n      this.setState({gifs: response.data.data,\n                    isReady: true,\n                    title: \"Top 10 Trending Gifs\"})\n    })\n  }\n\n  render() {\n    if(this.state.isReady) {\n      return (\n        <div>\n          <Nav handleClick={() => alert(\"You are trying to refresh the page\")}/>\n          <div className=\"searchCard\">\n            <GifSearchForm onSubmit={this.handleSubmit} /> \n          </div>\n          <div className=\"titleBlock\">\n            <h1>{this.state.title}</h1>\n          </div>\n          <div className=\"container\">\n            {this.state.gifs.map(gif => <Gif key={gif.id} url={gif.images.original.url} title={gif.title} />)}\n          </div>\n          <div className=\"moreBtn\">\n            <button onClick={this.handleClick}>More GIFs</button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <Nav />\n          <h1>Hold up, the Gifs are brewing....</h1>\n        </div>\n      )\n    }\n  }\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}